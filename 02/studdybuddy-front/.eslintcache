[{"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/index.js":"1","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/App.js":"2","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/views/Root.js":"3","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentProfile.js":"4","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/helpers/gradesAvg.js":"5","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/Navigation.js":"6","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/views/AddStudent.js":"7","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentForm.js":"8","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentsList.js":"9","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/SchoolNews.js":"10","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/EditButton.js":"11","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/Average.js":"12"},{"size":219,"mtime":1607292685027,"results":"13","hashOfConfig":"14"},{"size":1019,"mtime":1607293436493,"results":"15","hashOfConfig":"14"},{"size":458,"mtime":1607293705288,"results":"16","hashOfConfig":"14"},{"size":1612,"mtime":1607373721639,"results":"17","hashOfConfig":"14"},{"size":166,"mtime":1607278209401,"results":"18","hashOfConfig":"14"},{"size":1157,"mtime":1607290965686,"results":"19","hashOfConfig":"14"},{"size":336,"mtime":1607373939007,"results":"20","hashOfConfig":"14"},{"size":4011,"mtime":1607378999449,"results":"21","hashOfConfig":"14"},{"size":886,"mtime":1607295430868,"results":"22","hashOfConfig":"14"},{"size":2216,"mtime":1607328788245,"results":"23","hashOfConfig":"14"},{"size":309,"mtime":1607373329312,"results":"24","hashOfConfig":"14"},{"size":452,"mtime":1607373770025,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"nwu15n",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/index.js",[],["58","59"],"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/App.js",[],"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/views/Root.js",["60","61"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport StudentsList from 'components/StudentsList';\nimport SchoolNews from 'components/SchoolNews';\n\nconst Wrapper = styled.div`\n  padding: 40px;\n  display: grid;\n  grid-template-columns: 0.8fr 1fr;\n  gap: 50px;\n  height: 90vh;\n`\n\nconst Root = () => {\n  return (\n    <Wrapper>\n      <StudentsList />\n      <SchoolNews />\n    </Wrapper>\n  );\n};\n\nexport default Root;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentProfile.js",[],"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/helpers/gradesAvg.js",[],["62","63"],"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/Navigation.js",["64"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { ReactComponent as HomeIcon } from 'assets/icons/home.svg';\nimport { ReactComponent as AddStudentIcon } from 'assets/icons/add_student.svg';\n\nconst StyledNav = styled.nav`\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  li {\n    padding: 25px 0 5px;\n  }\n  \n  a.selected path {\n    fill: #4A4A4A;\n  }\n`\n\nconst StyledLogo = styled.div`\n  margin-top: 40px;\n  background-color: #FFD84F;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Navigation = () => (\n  <StyledNav>\n    <StyledLogo>\n      <img src={process.env.PUBLIC_URL + '/logo.svg'} />\n    </StyledLogo>\n    <ul>\n      <li>\n        <NavLink exact activeClassName=\"selected\" to=\"/\"><HomeIcon /></NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"selected\" to=\"/add-student\"><AddStudentIcon /></NavLink>\n      </li>\n    </ul>\n  </StyledNav>\n);\n\nNavigation.propTypes = {};\n\nexport default Navigation;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/views/AddStudent.js",["65","66"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport StudentForm from 'components/StudentForm';\n\nconst Wrapper = styled.div`\n  padding: 40px;\n  max-width: 800px;\n`\n\nconst AddStudent = () => {\n  return (\n    <Wrapper>\n      <StudentForm />\n    </Wrapper>\n  );\n};\n\nexport default AddStudent;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentForm.js",["67","68","69","70"],"import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { EditButton } from 'components/EditButton';\nimport { Average } from 'components/Average';\nimport { getGradesAvg } from 'helpers/gradesAvg';\nimport * as yup from 'yup';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  height: 100%;\n  width: 100%;\n  border-radius: 15px;\n  position: relative;\n  overflow-y: scroll;\n`;\n\nconst Title = styled.h2`\n  position: absolute;\n  left: 0;\n  margin-top: 50px;\n  padding-right: 20px;\n  background-color: #FFD84F;\n  width: 120px;\n  height: 70px;\n  text-align: right;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  height: 100%;\n  padding: 150px 50px 50px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  max-width: 300px;\n  margin-bottom: 20px;\n  display: block;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid black;\n  font-size: 17px;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: bold;\n  \n  &:focus {\n    outline: none;\n  }\n  \n  &#score {\n    width: 100px;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 15px;\n`;\n\nconst SaveButton = styled.button`\n  background-color: #FFD84F;\n  border-radius: 50px;\n  font-weight: bold;\n  font-size: 15px;\n  padding: 10px 25px;\n  border: none;\n`\n\nconst AddScoreWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst ScoresWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 40px 0;\n`;\n\nconst Scores = styled.div`\n  border-radius: 15px;\n  width: 100%;\n  margin-right: 30px;\n  height: 90px;\n  padding: 20px;\n  background-color: #F5F2F0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  \n  p {\n    margin: 5px 0;\n  }\n  \n  p:first-child {\n    font-size: 15px;\n  }\n  \n  p:last-child {\n    font-size: 20px;\n  }\n`;\n\nconst Field = styled.div`\n  display: inline-block;\n  margin-right: 30px;\n`;\n\nlet grade = yup.number();\ngrade\n  .integer('Ocena musi być liczbowa')\n  .positive('Ocena musi być liczbą dodatnią')\n  .min(1, 'Ocena musi być wyższa od 0')\n  .max(6, 'Ocena musi być niższa od 7');\n\nconst StudentForm = () => {\n  const [scores, setScores] = useState([4,2,3,4,4,3,4]);\n  const [scoreInputValue, setScoreInputValue] = useState('');\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = data => console.log({ ...data, scores });\n  const [average, setAverage] = useState();\n\n  useEffect(() => {\n    setScores([4,2,3,4,4,3,4]);\n  }, []);\n\n  useEffect(() => {\n    setAverage(getGradesAvg(scores));\n  }, [scores])\n\n  const handleScoreInputChange = (e) => {\n      setScoreInputValue(e.target.value);\n  }\n\n  const handleAddGrade = () => {\n    setScores([...scores, parseInt(scoreInputValue)])\n    setScoreInputValue('');\n  }\n\n  return (\n    <Wrapper>\n      <Title>Dodaj ucznia</Title>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Field><Label>Imię</Label>\n          <Input id=\"name\" name=\"name\" ref={register}/></Field>\n        <Field><Label>Grupa</Label>\n          <Input id=\"group\" name=\"group\" ref={register}/></Field>\n\n        <Field><Label>Wiek</Label>\n          <Input id=\"age\" name=\"age\" ref={register}/></Field>\n        <Field><Label>Dodaj ocenę</Label>\n          <AddScoreWrapper>\n            <Input id=\"score\" name=\"score\" value={scoreInputValue} onChange={handleScoreInputChange} />\n            <EditButton type=\"button\" onClick={handleAddGrade}>+</EditButton>\n          </AddScoreWrapper></Field>\n        <ScoresWrapper>\n          <Scores>\n            <p>Oceny</p>\n            <p>{scores.join(', ')}</p>\n          </Scores>\n          <Average value={average}>{average}</Average>\n        </ScoresWrapper>\n        <SaveButton type=\"submit\">zapisz</SaveButton>\n      </Form>\n    </Wrapper>\n  );\n};\n\nStudentForm.propTypes = {};\n\nexport default StudentForm;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/StudentsList.js",["71"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport StudentProfile from 'components/StudentProfile';\n\nconst Wrapper = styled.div`\n  overflow-y: scroll;\n  \n`;\n\nconst StudentsList = () => {\n  const [students, setStudents] = useState([\n    {\n      name: 'Fake',\n      age: 32,\n      group: 'Fake Group',\n      grades: [2,5,4,4,5,5],\n    }\n  ]);\n\n  return (\n    <Wrapper>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n      <StudentProfile studentData={students[0]}/>\n    </Wrapper>\n  );\n}\n\nStudentsList.propTypes = {};\n\nexport default StudentsList;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/SchoolNews.js",["72","73","74","75"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background-color: white;\n  height: 100%;\n  width: 100%;\n  border-radius: 15px;\n  position: relative;\n  overflow-y: scroll;\n`;\n\nconst Title = styled.h2`\n  position: absolute;\n  left: 0;\n  margin-top: 50px;\n  padding-right: 20px;\n  background-color: #FFD84F;\n  width: 120px;\n  height: 70px;\n  text-align: right;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Articles = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 120px 40px 50px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Article = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 25px 0;\n  position: relative;\n  \n  &:not(:last-child)::after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 2px;\n    background-color: #7C6208;\n    bottom: 0;\n    opacity: 10%;\n  }\n`;\n\nconst ArticleImage = styled.div`\n  flex-shrink: 0;\n  width: 120px;\n  height: 120px;\n  border-radius: 15px;\n  overflow: hidden;\n  margin-right: 40px;\n  \n  img {\n    object-fit: fill;\n  }\n`;\n\nconst SchoolNews = () => (\n  <Wrapper>\n    <Title>Gazetka szkolna</Title>\n    <Articles>\n      <Article>\n        <ArticleImage>\n          <img src=\"https://picsum.photos/250/250\" />\n        </ArticleImage>\n        <div>\n        <h3>Wymiana komputerów</h3>\n        <p>Już niebawem w sali informatycznej 118\n          pojawi się kilka nowych urządzeń!</p>\n        </div>\n      </Article>\n      <Article>\n        <ArticleImage>\n          <img src=\"https://picsum.photos/250/250\" />\n        </ArticleImage>\n        <div>\n          <h3>Wymiana komputerów</h3>\n          <p>Już niebawem w sali informatycznej 118\n            pojawi się kilka nowych urządzeń!</p>\n        </div>\n      </Article>\n      <Article>\n        <ArticleImage>\n          <img src=\"https://picsum.photos/250/250\" />\n        </ArticleImage>\n        <div>\n          <h3>Wymiana komputerów</h3>\n          <p>Już niebawem w sali informatycznej 118\n            pojawi się kilka nowych urządzeń!</p>\n        </div>\n      </Article>\n    </Articles>\n  </Wrapper>\n);\n\nSchoolNews.propTypes = {};\n\nexport default SchoolNews;\n","/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/EditButton.js",[],"/Users/adamromanski/Tutorials/2020-12-API/02/studdybuddy-front/src/components/Average.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":40,"column":7,"nodeType":"89","endLine":40,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"90","line":1,"column":38,"nodeType":"82","messageId":"83","endLine":1,"endColumn":44},{"ruleId":"80","severity":1,"message":"91","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":17},{"ruleId":"80","severity":1,"message":"92","line":126,"column":35,"nodeType":"82","messageId":"83","endLine":126,"endColumn":40},{"ruleId":"80","severity":1,"message":"93","line":126,"column":42,"nodeType":"82","messageId":"83","endLine":126,"endColumn":48},{"ruleId":"80","severity":1,"message":"94","line":11,"column":20,"nodeType":"82","messageId":"83","endLine":11,"endColumn":31},{"ruleId":"80","severity":1,"message":"91","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":72,"column":11,"nodeType":"89","endLine":72,"endColumn":54},{"ruleId":"87","severity":1,"message":"88","line":82,"column":11,"nodeType":"89","endLine":82,"endColumn":54},{"ruleId":"87","severity":1,"message":"88","line":92,"column":11,"nodeType":"89","endLine":92,"endColumn":54},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["95"],["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'PropTypes' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'setStudents' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]